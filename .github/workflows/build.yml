name: Build

on: [push, pull_request]

env:
  BUILD_TYPE: Release

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, ubuntu-24.04, macos-14, windows-2022]
        shared_libs: ['ON', 'OFF']
        include:
        - os: ubuntu-20.04
          package_manager: "apt"

        - os: ubuntu-22.04
          package_manager: "apt"

        - os: ubuntu-24.04
          package_manager: "apt"

        - os: macos-14
          package_manager: "brew"

        - os: windows-2022
          package_manager: "vcpkg"

    steps:
    - name: Checkout Pangolin
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: "(vcpkg only) Install Microsoft Visual C++"
      if: ${{ matrix.package_manager == 'vcpkg' }}
      uses: ilammy/msvc-dev-cmd@v1

    - name: "(vcpkg only) Restore any cached ports"
      uses: lukka/run-vcpkg@v11
      if: ${{ matrix.package_manager == 'vcpkg' }}
      with:
        vcpkgDirectory: '${{github.workspace}}/scripts/vcpkg'

    - name: "(vcpkg only) Setup CMake Toolchain file"
      if: ${{ matrix.package_manager == 'vcpkg' }}
      run: |
        export TOOLCHAIN_FILE="${{github.workspace}}/scripts/vcpkg/scripts/buildsystems/vcpkg.cmake"
        echo "${{github.workspace}}/scripts/vcpkg" >> $GITHUB_PATH
        echo "TOOLCHAIN_FILE=$TOOLCHAIN_FILE" >> $GITHUB_ENV

    - name: "(brew only) Remove Python symlinks"
      if: ${{ matrix.package_manager == 'brew' }}
      run: |
        rm /usr/local/bin/2to3
        rm /usr/local/bin/2to3-3.12
        rm /usr/local/bin/idle3
        rm /usr/local/bin/idle3.12
        rm /usr/local/bin/pydoc3
        rm /usr/local/bin/pydoc3.12
        rm /usr/local/bin/python3
        rm /usr/local/bin/python3.12
        rm /usr/local/bin/python3-config
        rm /usr/local/bin/python3.12-config

    - name: Install Dependencies
      env:
        HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
      run: |
        echo "vcpkg location: $(which vcpkg)"
        echo "CMake toolchain file: $TOOLCHAIN_FILE"
        $GITHUB_WORKSPACE/scripts/install_prerequisites.sh -v -u -m ${{matrix.package_manager}} all

    - name: "(vcpkg only) remove python"
      if: ${{ matrix.package_manager == 'vcpkg' }}
      run: |
        vcpkg remove python3

    - uses: actions/setup-python@v5
      if: ${{ matrix.package_manager == 'vcpkg' }}
      with:
        python-version: '3.12'

    - name: "(vcpkg only) install setuptools"
      if: ${{ matrix.package_manager == 'vcpkg' }}
      run: |
        pip install setuptools wheel

    - name: Configure CMake
      run: >
        CXXFLAGS="-Wno-error=deprecated-copy" cmake -G Ninja -B build
        -D CMAKE_BUILD_TYPE=$BUILD_TYPE
        -D CMAKE_TOOLCHAIN_FILE="$TOOLCHAIN_FILE"
        -D BUILD_SHARED_LIBS=${{ matrix.shared_libs }}

    - name: Build
      run: cmake --build build --config $BUILD_TYPE
